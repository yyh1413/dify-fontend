// 全部配置的链接  https://www.cnblogs.com/vant-xie/p/16744406.html
{
  "compilerOptions": {
    // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "allowSyntheticDefaultImports": true,
    // 指定ECMAScript目标版本
    "target": "ESNext",
    // 是否校验TypeScript数据类型
    "useDefineForClassFields": true,
    // 指定生成哪个模块系统代码
    "module": "ESNext",
    // 是否删除注释
    "removeComments": true,
    // 指定输出目录
    "outDir": "./dist",
    // 决定如何处理模块。
    "moduleResolution": "Node",
    // 启用所有严格类型检查选项。
    // 启用 --strict相当于启用 --noImplicitAny, --noImplicitThis, --alwaysStrict，
    // --strictNullChecks和 --strictFunctionTypes和--strictPropertyInitialization。
    "strict": true,
    "jsx": "preserve",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "esModuleInterop": true,
    // 忽略所有的声明文件（ *.d.ts）的类型检查。
    "skipLibCheck": true,
    "noEmit": true,
    // 要包含的类型声明文件名列表
    "types": [],
    "baseUrl": "./",	// 解析非相对模块的基地址，默认是当前目录
    // 模块名到基于 baseUrl的路径映射的列表。
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    // 编译过程中需要引入的库文件的列表。
    "lib": [
      "ESNext",
      "DOM",
      "DOM.Iterable",
      "ScriptHost"
    ]
  },
  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
